/*
 * This file is part of Safester.                                    
 * Copyright (C) 2019, KawanSoft SAS
 * (https://www.Safester.net). All rights reserved.                                
 *                                                                               
 * Safester is free software; you can redistribute it and/or                 
 * modify it under the terms of the GNU Lesser General Public                    
 * License as published by the Free Software Foundation; either                  
 * version 2.1 of the License, or (at your option) any later version.            
 *                                                                               
 * Safester is distributed in the hope that it will be useful,               
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU             
 * Lesser General Public License for more details.                               
 *                                                                               
 * You should have received a copy of the GNU Lesser General Public              
 * License along with this library; if not, write to the Free Software           
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  
 * 02110-1301  USA
 * 
 * Any modifications to this file must keep this entire header
 * intact.
 */
package com.swing.util.CustomJtree.dragdrop.test;

import java.sql.Connection;

import net.safester.application.parms.ConnectionParms;
import net.safester.application.tool.FoldersHandler;
import net.safester.application.tool.WindowSettingManager;
import net.safester.application.util.JOptionPaneNewCustom;

import com.swing.util.CustomJtree.CustomJTree;

/**
 *
 * @author RunningLiberty
 */
public class TestCustomJTree extends javax.swing.JFrame {

  private CustomJTree customJtree;

   int userNumber = 0;
   private Connection connection;

   public static int getUserNumber()
   {
       return 2;
   }
   
   public static Connection getConnection()
   {
        String passphrase = null;

        //passphrase = JOptionPane.showInputDialog(null, "passphrase");
        passphrase = "*2loveme$";

        ConnectionParms connectionParms = new ConnectionParms(
                                                "ndepomereu@safelogic.com",
                                                passphrase.toCharArray(),
                                                null, null
                                                );
        Connection connection = null;

        try {
           connection = connectionParms.getConnection();
        } catch (Exception ex) {
            JOptionPaneNewCustom.showException(null, ex);
            System.exit(-1);
        }

        return connection;
   }

    /** Creates new form TestCustomJTree */
    public TestCustomJTree() {

        initComponents();

        this.jTextField1.setDragEnabled(true);

        connection = getConnection();
        userNumber = getUserNumber();
        reloadJTree();

        pack();
        WindowSettingManager.load(this);
        
        this.setVisible(true);
    }

    /**
     * Reload the tree of folders
     */
    public void reloadJTree() {
        //Init tree containing folders
        try {
                        
            FoldersHandler foldersHandler = new FoldersHandler(connection, userNumber);
            foldersHandler.initFolders();
          //  jPanelFoldersTree.remove(customJtree);
            customJtree = CustomJTree.initJTree(this, connection, foldersHandler, userNumber);

        } catch (Exception e) {
            JOptionPaneNewCustom.showException(rootPane, e);
            System.exit(-1);
        }

        this.jScrollPane2.setViewportView(customJtree);
        this.update(this.getGraphics());
        
        // pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFoldersTree = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelFoldersTree.setBackground(new java.awt.Color(255, 255, 255));
        jPanelFoldersTree.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBorder(null);
        jPanelFoldersTree.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jTextField1.setText("jTextField1");
        jPanel1.add(jTextField1);

        jPanelFoldersTree.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanelFoldersTree, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestCustomJTree();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelFoldersTree;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
